notifications.connector.http.client-error.log-level=ERROR
notifications.connector.http.server-error.log-level=ERROR
notifications.connector.kafka.incoming.group-id=notifications-connector-email
notifications.connector.kafka.incoming.high-volume.topic=${mp.messaging.high-volume.topic}
notifications.connector.kafka.incoming.topic=${mp.messaging.tocamel.topic}
notifications.connector.kafka.outgoing.topic=${mp.messaging.fromcamel.topic}
notifications.connector.name=email_subscription
notifications.connector.redelivery.counter-name=camel.email.retry.counter
# The following value matches the default value of the `connectionsPerRoute` option from the Camel `http` component.
notifications.connector.seda.concurrent-consumers=20
# The following value matches the default value of the `connectionsPerRoute` option from the Camel `http` component.
notifications.connector.seda.queue-size=20
notifications.connector.supported-connector-headers=${notifications.connector.name}
# Re-injections should not be enabled for this connector
notifications.connector.kafka.maximum-reinjections=0

quarkus.http.port=9003

quarkus.log.cloudwatch.enabled=false
quarkus.log.cloudwatch.level=INFO
quarkus.log.cloudwatch.log-stream-name=${HOST_NAME:notifications-connector-email}

quarkus.log.sentry=false
quarkus.log.sentry.in-app-packages=com.redhat.cloud.notifications

quarkus.kafka.devservices.port=9092

camel.component.kafka.brokers=localhost:9092
camel.component.kafka.sasl-jaas-config=""
camel.component.kafka.sasl-mechanism=GSSAPI
camel.component.kafka.security-protocol=PLAINTEXT
camel.component.kafka.ssl-truststore-location=
camel.component.kafka.ssl-truststore-type=JKS
camel.component.kafka.poll-on-error=RECONNECT
camel.component.kafka.retries=3
camel.component.kafka.retry-backoff-ms=200

camel.context.name=notifications-connector-email

mp.messaging.high-volume.topic=platform.notifications.connector.email.high.volume
mp.messaging.tocamel.topic=platform.notifications.tocamel
mp.messaging.fromcamel.topic=platform.notifications.fromcamel

# Bop configuration
notifications.connector.user-provider.bop.url=https://backoffice-proxy.apps.ext.spoke.preprod.us-west-2.aws.paas.redhat.com
quarkus.rest-client.bop.url=https://backoffice-proxy.apps.ext.spoke.preprod.us-west-2.aws.paas.redhat.com
# For some environments, bop uses same certificates as recipients-resolver because they are hosted in the same cluster.
quarkus.rest-client.bop.trust-store=${clowder.endpoints.notifications-recipients-resolver-service.trust-store-path}
quarkus.rest-client.bop.trust-store-password=${clowder.endpoints.notifications-recipients-resolver-service.trust-store-password}
quarkus.rest-client.bop.trust-store-type=${clowder.endpoints.notifications-recipients-resolver-service.trust-store-type}
notifications.connector.user-provider.bop.api_token=changeme
notifications.connector.user-provider.bop.client_id=changeme
notifications.connector.user-provider.bop.env=changeme

# The URL for the recipients-resolver using camel integration
notifications.connector.recipients-resolver.url=${clowder.endpoints.notifications-recipients-resolver-service.url:http://localhost:9008}
# The URL for the recipients-resolver using rest client integration
quarkus.rest-client.recipients-resolver.url=${clowder.endpoints.notifications-recipients-resolver-service.url:http://localhost:9008}
quarkus.rest-client.recipients-resolver.trust-store=${clowder.endpoints.notifications-recipients-resolver-service.trust-store-path}
quarkus.rest-client.recipients-resolver.trust-store-password=${clowder.endpoints.notifications-recipients-resolver-service.trust-store-password}
quarkus.rest-client.recipients-resolver.trust-store-type=${clowder.endpoints.notifications-recipients-resolver-service.trust-store-type}

quarkus.unleash.active=false
quarkus.unleash.url=http://localhost:4242
