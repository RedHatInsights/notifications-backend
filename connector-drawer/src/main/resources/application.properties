notifications.connector.http.client-error.log-level=ERROR
notifications.connector.http.components=http
notifications.connector.http.server-error.log-level=ERROR
notifications.connector.kafka.incoming.group-id=notifications-connector-drawer
notifications.connector.kafka.incoming.topic=${mp.messaging.tocamel.topic}
notifications.connector.kafka.outgoing.topic=${mp.messaging.fromcamel.topic}
notifications.connector.kafka.outgoing.drawer.topic=${mp.messaging.todrawer.topic}
notifications.connector.name=drawer
notifications.connector.redelivery.counter-name=camel.drawer.retry.counter
notifications.connector.supported-connector-headers=${notifications.connector.name}
# Re-injections should not be enabled for this connector
notifications.connector.kafka.maximum-reinjections=0

# The following value matches the default value of the `connectionsPerRoute` option from the Camel `http` component.
notifications.connector.seda.concurrent-consumers=20
# The following value matches the default value of the `connectionsPerRoute` option from the Camel `http` component.
notifications.connector.seda.queue-size=20

quarkus.http.port=9007

quarkus.log.cloudwatch.enabled=false
quarkus.log.cloudwatch.level=INFO
quarkus.log.cloudwatch.log-stream-name=${HOST_NAME:notifications-connector-drawer}

quarkus.log.sentry.enabled=false
quarkus.log.sentry.in-app-packages=com.redhat.cloud.notifications

quarkus.kafka.devservices.port=9092

camel.component.kafka.brokers=localhost:9092
camel.component.kafka.sasl-jaas-config=""
camel.component.kafka.sasl-mechanism=GSSAPI
camel.component.kafka.security-protocol=PLAINTEXT
camel.component.kafka.ssl-truststore-location=
camel.component.kafka.ssl-truststore-type=JKS
camel.component.kafka.retries=3
camel.component.kafka.retry-backoff-ms=200

camel.context.name=notifications-connector-drawer

mp.messaging.tocamel.topic=platform.notifications.tocamel
mp.messaging.fromcamel.topic=platform.notifications.fromcamel
mp.messaging.todrawer.topic=platform.chrome

%test.quarkus.log.category."com.redhat.cloud.notifications".level=DEBUG

# The URL for the recipients-resolver.
notifications.connector.recipients-resolver.url=${clowder.endpoints.notifications-recipients-resolver-service.url:http://localhost:9008}
# The URL for the recipients-resolver using rest client integration
quarkus.rest-client.recipients-resolver.url=${clowder.endpoints.notifications-recipients-resolver-service.url:http://localhost:9008}
quarkus.rest-client.recipients-resolver.trust-store=${clowder.endpoints.notifications-recipients-resolver-service.trust-store-path}
quarkus.rest-client.recipients-resolver.trust-store-password=${clowder.endpoints.notifications-recipients-resolver-service.trust-store-password}
quarkus.rest-client.recipients-resolver.trust-store-type=${clowder.endpoints.notifications-recipients-resolver-service.trust-store-type}

# Output queue to drawer
mp.messaging.outgoing.drawer.connector=smallrye-kafka
mp.messaging.outgoing.drawer.topic=platform.chrome
mp.messaging.outgoing.drawer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.drawer.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.drawer.cloud-events-source=urn:redhat:source:notifications:drawer
mp.messaging.outgoing.drawer.cloud-events-mode=structured
feature-flags.expose-kafka-ssl-config-keys.enabled=true

quarkus.unleash.active=false
quarkus.unleash.url=http://localhost:4242

