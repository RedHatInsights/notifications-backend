---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: notifications-connector-email
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: notifications-connector-email
  spec:
    dependencies:
    - rbac
    envName: ${ENV_NAME}
    kafkaTopics:
    - topicName: platform.notifications.tocamel
      partitions: 3
      replicas: 3
    - topicName: platform.notifications.fromcamel
      partitions: 3
      replicas: 3
    deployments:
    - name: service
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        private:
          enabled: true
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        volumes:
          - name: keystore
            secret:
              secretName: it-services
              items:
                - key: keystore.jks
                  path: clientkeystore.jks
              defaultMode: 420
              optional: true
        volumeMounts:
          - name: keystore
            readOnly: true
            mountPath: /mnt/secrets
        readinessProbe:
          httpGet:
            path: /q/health/ready
            port: ${{QUARKUS_HTTP_PORT}}
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: ${{QUARKUS_HTTP_PORT}}
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        env:
        - name: ENV_NAME
          value: ${ENV_NAME}
        - name: NOTIFICATIONS_CONNECTOR_ENDPOINT_CACHE_MAX_SIZE
          value: ${NOTIFICATIONS_CONNECTOR_ENDPOINT_CACHE_MAX_SIZE}
        - name: NOTIFICATIONS_CONNECTOR_FETCH_USERS_RBAC_ENABLED
          value: ${NOTIFICATIONS_CONNECTOR_FETCH_USERS_RBAC_ENABLED}
        - name: NOTIFICATIONS_CONNECTOR_HTTPS_CONNECT_TIMEOUT_MS
          value: ${NOTIFICATIONS_CONNECTOR_HTTPS_CONNECT_TIMEOUT_MS}
        - name: NOTIFICATIONS_CONNECTOR_HTTPS_SOCKET_TIMEOUT_MS
          value: ${NOTIFICATIONS_CONNECTOR_HTTPS_SOCKET_TIMEOUT_MS}
        - name: NOTIFICATIONS_CONNECTOR_KAFKA_INCOMING_MAX_POLL_INTERVAL_MS
          value: ${KAFKA_MAX_POLL_INTERVAL_MS}
        - name: NOTIFICATIONS_CONNECTOR_KAFKA_INCOMING_MAX_POLL_RECORDS
          value: ${KAFKA_MAX_POLL_RECORDS}
        - name: NOTIFICATIONS_CONNECTOR_KAFKA_INCOMING_POLL_ON_ERROR
          value: ${KAFKA_POLL_ON_ERROR}
        - name: NOTIFICATIONS_CONNECTOR_REDELIVERY_DELAY
          value: ${NOTIFICATIONS_CONNECTOR_REDELIVERY_DELAY}
        - name: NOTIFICATIONS_CONNECTOR_REDELIVERY_MAX_ATTEMPTS
          value: ${NOTIFICATIONS_CONNECTOR_REDELIVERY_MAX_ATTEMPTS}
        - name: NOTIFICATIONS_CONNECTOR_SINGLE_EMAIL_PER_USER_ENABLED
          value: ${NOTIFICATIONS_CONNECTOR_SINGLE_EMAIL_PER_USER_ENABLED}
        - name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_BOP_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: backoffice
              key: token
        - name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_BOP_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: backoffice
              key: client-id
        - name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_BOP_ENV
          value: ${BACKOFFICE_CLIENT_ENV}
        - name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_BOP_URL
          value: ${BACKOFFICE_SCHEME}://${BACKOFFICE_HOST}
        - name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_RBAC_APPLICATION_KEY
          value: ${NOTIFICATIONS_CONNECTOR_USER_PROVIDER_RBAC_APPLICATION_KEY}
        - name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_RBAC_PSKS
          valueFrom:
            secretKeyRef:
              name: rbac-psks
              key: psks.json
        - name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_IT_KEY_STORE_LOCATION
          value: ${NOTIFICATIONS_CONNECTOR_USER_PROVIDER_IT_KEY_STORE_LOCATION}
        - name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_IT_KEY_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: it-services
              key: it-services-keystorepassword
              optional: true
        - name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_IT_URL
          valueFrom:
            secretKeyRef:
              name: it-services
              key: url
              optional: true
        - name: QUARKUS_HTTP_PORT
          value: ${QUARKUS_HTTP_PORT}
        - name: QUARKUS_LOG_CATEGORY__COM_REDHAT_CLOUD_NOTIFICATIONS__LEVEL
          value: ${NOTIFICATIONS_LOG_LEVEL}
        - name: QUARKUS_LOG_CATEGORY__ORG_APACHE_KAFKA_CLIENTS__LEVEL
          value: ${KAFKA_CLIENT_LOG_LEVEL}
        - name: QUARKUS_LOG_CLOUDWATCH_API_CALL_TIMEOUT
          value: ${QUARKUS_LOG_CLOUDWATCH_API_CALL_TIMEOUT}
        - name: QUARKUS_LOG_CLOUDWATCH_BATCH_PERIOD
          value: ${QUARKUS_LOG_CLOUDWATCH_BATCH_PERIOD}
        - name: QUARKUS_LOG_CLOUDWATCH_BATCH_SIZE
          value: ${QUARKUS_LOG_CLOUDWATCH_BATCH_SIZE}
        - name: QUARKUS_LOG_CLOUDWATCH_ENABLED
          value: ${QUARKUS_LOG_CLOUDWATCH_ENABLED}
        - name: QUARKUS_LOG_CLOUDWATCH_LOG_STREAM_NAME
          value: ${HOSTNAME}
        - name: QUARKUS_LOG_CLOUDWATCH_MAX_QUEUE_SIZE
          value: ${QUARKUS_LOG_CLOUDWATCH_MAX_QUEUE_SIZE}
        - name: QUARKUS_LOG_CLOUDWATCH_SERVICE_ENVIRONMENT
          value: ${ENV_NAME}
        - name: QUARKUS_LOG_SENTRY
          value: ${SENTRY_ENABLED}
        - name: QUARKUS_LOG_SENTRY_DSN
          value: ${SENTRY_DSN}${ENV_NAME}
        - name: QUARKUS_LOG_SENTRY_ENVIRONMENT
          value: ${ENV_NAME}
parameters:
- name: BACKOFFICE_CLIENT_ENV
  description: Back-office client environment
  value: qa
- name: BACKOFFICE_HOST
  description: The host of the backoffice proxy
  value: backoffice-proxy.apps.ext.spoke.preprod.us-west-2.aws.paas.redhat.com
- name: BACKOFFICE_SCHEME
  description: The scheme for the backoffice proxy host's URL
  value: "https"

- name: CPU_LIMIT
  description: CPU limit
  value: 200m
- name: CPU_REQUEST
  description: CPU request
  value: 100m

- name: ENV_NAME
  description: ClowdEnvironment name (ephemeral, stage, prod)
  required: true

- name: IMAGE
  description: Image URL
  value: quay.io/cloudservices/notifications-connector-email
- name: IMAGE_TAG
  value: latest

- name: KAFKA_CLIENT_LOG_LEVEL
  description: Log level of the Kafka client library
  value: WARN
- name: KAFKA_MAX_POLL_INTERVAL_MS
  description: Maximum delay in milliseconds between two calls of poll(). Defaults to 300000 (5 minutes).
  value: "300000"
- name: KAFKA_MAX_POLL_RECORDS
  description: Maximum number of records returned in a single call of poll(). Defaults to 500.
  value: "500"
- name: KAFKA_POLL_ON_ERROR
  description: What to do if kafka threw an exception while polling for new messages. See https://camel.apache.org/components/latest/kafka-component.html for more details.
  value: RECONNECT

- name: MEMORY_LIMIT
  description: Memory limit
  value: 500Mi
- name: MEMORY_REQUEST
  description: Memory request
  value: 250Mi
- name: MIN_REPLICAS
  value: "3"

- name: NOTIFICATIONS_CONNECTOR_ENDPOINT_CACHE_MAX_SIZE
  description: Maximum size of the Camel endpoints cache
  value: "100"
- name: NOTIFICATIONS_CONNECTOR_FETCH_USERS_RBAC_ENABLED
  description: Is RBAC used to fetch the users?
  value: "true"
- name: NOTIFICATIONS_CONNECTOR_HTTPS_CONNECT_TIMEOUT_MS
  description: Maximum time in milliseconds allowed to establish an HTTPS connection
  value: "2500"
- name: NOTIFICATIONS_CONNECTOR_HTTPS_SOCKET_TIMEOUT_MS
  description: Maximum time in milliseconds allowed to wait for HTTPS data
  value: "2500"
- name: NOTIFICATIONS_CONNECTOR_REDELIVERY_DELAY
  description: Delay in milliseconds between two redelivery attempts
  value: "1000"
- name: NOTIFICATIONS_CONNECTOR_REDELIVERY_MAX_ATTEMPTS
  description: Maximum number of redelivery attempts (initial call not included)
  value: "2"
- name: NOTIFICATIONS_CONNECTOR_SINGLE_EMAIL_PER_USER_ENABLED
  description: Is sending a single email per user enabled?
  value: "false"
- name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_CACHE_EXPIRE_AFTER_WRITE
  description: Expiration delay in seconds of cached users
  value: "600"
- name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_RBAC_APPLICATION_KEY
  description: The application's key which will be used to authenticate to RBAC.
  value: "notifications"
- name: NOTIFICATIONS_CONNECTOR_USER_PROVIDER_IT_KEY_STORE_LOCATION
  description: "Key store for opening a secure connection when communicating with IT. It should be set to 'file:/mnt/secrets/clientkeystore.jks'"
  value: ""
- name: NOTIFICATIONS_LOG_LEVEL
  description: Log level of Notifications
  value: INFO

- name: QUARKUS_HTTP_PORT
  description: Quarkus HTTP server port, defaulting to the default Clowder private port
  value: "9000"
- name: QUARKUS_LOG_CLOUDWATCH_API_CALL_TIMEOUT
  description: Amount of time to allow the CloudWatch client to complete the execution of an API call expressed with the ISO-8601 duration format PnDTnHnMn.nS.
  value: PT30S
- name: QUARKUS_LOG_CLOUDWATCH_BATCH_PERIOD
  description: Period between two batch executions. Defaults to 5s.
  value: 5s
- name: QUARKUS_LOG_CLOUDWATCH_BATCH_SIZE
  description: Number of log events sent to CloudWatch per batch. Defaults to 10,000 which is the maximum number of log events per batch allowed by CloudWatch.
  value: "10000"
- name: QUARKUS_LOG_CLOUDWATCH_ENABLED
  value: "false"
- name: QUARKUS_LOG_CLOUDWATCH_MAX_QUEUE_SIZE
  description: Optional maximum size of the log events queue. If this is not set, the queue will have a capacity of Integer#MAX_VALUE.
  value: "100000"

- name: SENTRY_DSN
  description: The DSN to push data to Sentry â€” i.e. https://public_key@host/project_id?environment=
- name: SENTRY_ENABLED
  value: "false"
