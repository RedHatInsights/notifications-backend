---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: notifications-recipients-resolver
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: notifications-recipients-resolver
    labels:
      app: notifications-recipients-resolver
  spec:
    envName: ${ENV_NAME}
    dependencies:
    - rbac
    featureFlags: true
    deployments:
    - name: service
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        public:
          enabled: true
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        volumes:
        - name: keystore
          secret:
            secretName: it-services
            items:
              - key: keystore.jks
                path: clientkeystore.jks
            defaultMode: 420
            optional: true
        - name: it-services-cert
          secret:
            secretName: it-services-cert
            optional: ${{IT_SERVICE_OPTIONAL}}
        - name: it-services-pkcs12-builder-volume
          configMap:
            name: it-services-pkcs12-builder-script
        volumeMounts:
        - name: keystore
          readOnly: true
          mountPath: /mnt/secrets
        - name: it-services-cert
          mountPath: /mnt/keystores
        - name: it-services-pkcs12-builder-volume
          mountPath: /mnt/it-services-pkcs12-builder
        initContainers:
          - name: it-services-pkcs12-builder
            image: ${IT_SERVICES_PKCS12_BUILDER_IMAGE}:${IT_SERVICES_PKCS12_BUILDER_IMAGE_TAG}
            command: [ "bash", "/mnt/it-services-pkcs12-builder/build-it-services-pkcs12.sh" ]
            env:
              - name: IT_SERVICES_KEYSTORE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: it-services
                    key: it-services-keystorepassword
                    optional: true
        readinessProbe:
          httpGet:
            path: /q/health/ready
            port: ${{QUARKUS_HTTP_PORT}}
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: ${{QUARKUS_HTTP_PORT}}
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        env:
        - name: ENV_NAME
          value: ${ENV_NAME}
        - name: HOST_NAME
          value: ${HOSTNAME}
        - name: NOTIFICATIONS_RECIPIENTS_RESOLVER_WARN_IF_REQUEST_DURATION_EXCEEDS
          value: ${NOTIFICATIONS_RECIPIENTS_RESOLVER_WARN_IF_REQUEST_DURATION_EXCEEDS}
        - name: NOTIFICATIONS_RECIPIENTS_RESOLVER_MAX_RESULTS_PER_PAGE
          value: ${NOTIFICATIONS_RECIPIENTS_RESOLVER_MAX_RESULTS_PER_PAGE}
        - name: NOTIFICATIONS_RECIPIENTS_RESOLVER_FETCH_USERS_MBOP_ENABLED
          value: ${NOTIFICATIONS_RECIPIENTS_RESOLVER_FETCH_USERS_MBOP_ENABLED}
        - name: NOTIFICATIONS_RECIPIENTS_RESOLVER_MBOP_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: backoffice
              key: token
        - name: NOTIFICATIONS_RECIPIENTS_RESOLVER_MBOP_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: backoffice
              key: client-id
        - name: NOTIFICATIONS_RECIPIENTS_RESOLVER_MBOP_ENV
          value: ${BACKOFFICE_CLIENT_ENV}
        - name: QUARKUS_REST_CLIENT_MBOP_URL
          value: ${BACKOFFICE_SCHEME}://${BACKOFFICE_HOST}
        - name: QUARKUS_REST_CLIENT_MBOP_KEY_STORE
          value: ${IT_SERVICE_TO_SERVICE_KEY_STORE}
        - name: QUARKUS_REST_CLIENT_MBOP_KEY_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: it-services
              key: it-services-keystorepassword
              optional: true
        - name: NOTIFICATIONS_RECIPIENTS_RESOLVER_FETCH_USERS_RBAC_ENABLED
          value: ${NOTIFICATIONS_RECIPIENTS_RESOLVER_FETCH_USERS_RBAC_ENABLED}
        - name: NOTIFICATIONS_UNLEASH_ENABLED
          value: ${NOTIFICATIONS_UNLEASH_ENABLED}
        - name: NOTIFICATIONS_RECIPIENTS_RESOLVER_USE_KESSEL_ENABLED
          value: ${NOTIFICATIONS_RECIPIENTS_RESOLVER_USE_KESSEL_ENABLED}
        - name: QUARKUS_CACHE_CAFFEINE_RECIPIENTS_USERS_PROVIDER_GET_USERS_EXPIRE_AFTER_WRITE
          value: ${RBAC_USERS_RETENTION_DELAY}
        - name: QUARKUS_CACHE_CAFFEINE_RECIPIENTS_USERS_PROVIDER_GET_GROUP_USERS_EXPIRE_AFTER_WRITE
          value: ${RBAC_GROUP_USERS_RETENTION_DELAY}
        - name: QUARKUS_CACHE_CAFFEINE_FIND_RECIPIENTS_EXPIRE_AFTER_WRITE
          value: ${FIND_RECIPIENTS_EXPIRE_AFTER_WRITE}
        - name: QUARKUS_HTTP_PORT
          value: ${QUARKUS_HTTP_PORT}
        - name: QUARKUS_LOG_CATEGORY__COM_REDHAT_CLOUD_NOTIFICATIONS__LEVEL
          value: ${NOTIFICATIONS_LOG_LEVEL}
        - name: QUARKUS_LOG_CATEGORY__ORG_JBOSS_RESTEASY_REACTIVE_CLIENT_LOGGING__LEVEL
          value: ${QUARKUS_LOG_CATEGORY__ORG_JBOSS_RESTEASY_REACTIVE_CLIENT_LOGGING__LEVEL}
        - name: QUARKUS_LOG_CLOUDWATCH_API_CALL_TIMEOUT
          value: ${QUARKUS_LOG_CLOUDWATCH_API_CALL_TIMEOUT}
        - name: QUARKUS_LOG_CLOUDWATCH_BATCH_PERIOD
          value: ${QUARKUS_LOG_CLOUDWATCH_BATCH_PERIOD}
        - name: QUARKUS_LOG_CLOUDWATCH_BATCH_SIZE
          value: ${QUARKUS_LOG_CLOUDWATCH_BATCH_SIZE}
        - name: QUARKUS_LOG_CLOUDWATCH_ENABLED
          value: ${CLOUDWATCH_ENABLED}
        - name: QUARKUS_LOG_CLOUDWATCH_MAX_QUEUE_SIZE
          value: ${QUARKUS_LOG_CLOUDWATCH_MAX_QUEUE_SIZE}
        - name: QUARKUS_LOG_CLOUDWATCH_SERVICE_ENVIRONMENT
          value: ${ENV_NAME}
        - name: QUARKUS_LOG_SENTRY_ENABLED
          value: ${SENTRY_ENABLED}
        - name: QUARKUS_LOG_SENTRY_DSN
          value: ${SENTRY_DSN}${ENV_NAME}
        - name: QUARKUS_LOG_SENTRY_ENVIRONMENT
          value: ${ENV_NAME}
        - name: QUARKUS_OIDC_CLIENT_AUTH_SERVER_URL
          value: ${OIDC_ISSUER}
        - name: QUARKUS_OIDC_CLIENT_CLIENT_ENABLED
          value: ${OIDC_CLIENT_ENABLED}
        - name: QUARKUS_OIDC_CLIENT_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: kessel-authentication
              key: relations-api.client.id
        - name: QUARKUS_OIDC_CLIENT_CREDENTIALS_SECRET
          valueFrom:
            secretKeyRef:
              name: kessel-authentication
              key: relations-api.client.secret
        - name: QUARKUS_REST_CLIENT_IT_S2S_KEY_STORE
          value: ${IT_SERVICE_TO_SERVICE_KEY_STORE}
        - name: QUARKUS_REST_CLIENT_IT_S2S_KEY_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: it-services
              key: it-services-keystorepassword
              optional: true
        - name: QUARKUS_REST_CLIENT_IT_S2S_URL
          valueFrom:
            secretKeyRef:
              name: it-services
              key: url
              optional: true
        - name: QUARKUS_REST_CLIENT_LOGGING_SCOPE
          value: ${QUARKUS_REST_CLIENT_LOGGING_SCOPE}
        - name: QUARKUS_REST_CLIENT_IT_S2S_READ_TIMEOUT
          value: ${IT_S2S_READ_TIMEOUT}
        - name: QUARKUS_REST_CLIENT_RBAC_S2S_READ_TIMEOUT
          value: ${RBAC_S2S_READ_TIMEOUT}
        - name: QUARKUS_UNLEASH_ACTIVE
          value: ${NOTIFICATIONS_UNLEASH_ENABLED}
        - name: RBAC_SERVICE_TO_SERVICE_APPLICATION
          value: ${RBAC_SERVICE_TO_SERVICE_APP}
        - name: RBAC_SERVICE_TO_SERVICE_SECRET_MAP
          valueFrom:
            secretKeyRef:
              name: rbac-psks
              key: psks.json
        - name: RELATIONS_API_AUTHN_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: kessel-authentication
              key: relations-api.client.id
        - name: RELATIONS_API_AUTHN_CLIENT_ISSUER
          value: ${NOTIFICATIONS_KESSEL_OIDC_ISSUER}
        - name: RELATIONS_API_AUTHN_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: kessel-authentication
              key: relations-api.client.secret
        - name: RELATIONS_API_IS_SECURE_CLIENTS
          value: ${NOTIFICATIONS_KESSEL_RELATIONS_SECURE_CLIENTS}
        - name: KESSEL_DOMAIN
          value: ${KESSEL_DOMAIN}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: it-services-pkcs12-builder-script
  data:
    build-it-services-pkcs12.sh: |
      #!/bin/bash
      set -e

      # Skip if generated certificate was not provided
      if ! [[ -f /mnt/keystores/tls.crt ]]; then
          printf "Autogenerated certificate was not provided, skipping init script\n"
          exit 0
      fi

      # Extract account name (subject UID)
      ACCOUNT_NAME=$(openssl x509 -in /mnt/keystores/tls.crt -noout -subject -nameopt rfc2253 |\
          sed 's/^subject=//' |\
          awk -F ',' '{for (i=1;i<=NF;i++) if ($i ~ /^UID/) print $i;}' | awk -F '=' '{print $2}')
      printf "Extracted account name\n"

      # Create PKCS #12 archive
      openssl pkcs12 -export \
          -chain -CAfile /mnt/keystores/ca.crt \
          -inkey /mnt/keystores/tls.key -passin "env:IT_SERVICES_KEYSTORE_PASSWORD" \
          -in /mnt/keystores/tls.crt -name "$ACCOUNT_NAME" \
          -out /mnt/keystores/tls.p12 -passout "env:IT_SERVICES_KEYSTORE_PASSWORD"
      
      # Verify PKCS #12 archive
      if [[ $(openssl pkcs12 -info -clcerts -nokeys -in /mnt/keystores/tls.p12 -passin "env:IT_SERVICES_KEYSTORE_PASSWORD" 2>/dev/null) =~ subject.*$ACCOUNT_NAME ]]; then
        printf "PKCS #12 archive created and validated\n"
      else
        printf "Failed to create PKCS #12 archive\n"
        exit 1
      fi
parameters:
- name: CLOUDWATCH_ENABLED
  description: Enable Cloudwatch (or not)
  value: "false"
- name: CPU_LIMIT
  description: CPU limit
  value: 250m
- name: CPU_REQUEST
  description: CPU request
  value: 125m
- name: ENV_NAME
  description: ClowdEnvironment name (ephemeral, stage, prod)
  required: true
- name: IMAGE
  description: Image URL
  value: quay.io/cloudservices/notifications-recipients-resolver
- name: IMAGE_TAG
  value: latest
- name: IT_SERVICE_OPTIONAL
  description: "Is IT service integration optional for current env?"
  value: "true"
- name: IT_SERVICES_PKCS12_BUILDER_IMAGE
  description: "Image URL for container to assemble intermediate PKCS #12 for IT server"
  value: registry.access.redhat.com/ubi9/ubi
- name: IT_SERVICES_PKCS12_BUILDER_IMAGE_TAG
  value: latest
- name: IO_SMALLRYE_REACTIVE_MESSAGING_LOG_LEVEL
  value: INFO
- name: IT_SERVICE_TO_SERVICE_KEY_STORE
  description: "Key store for secured connection if communicating with IT. It should be set to file:/mnt/keystores/tls.p12"
  value: ""
- name: MEMORY_LIMIT
  description: Memory limit
  value: 500Mi
- name: MEMORY_REQUEST
  description: Memory request
  value: 250Mi
- name: MIN_REPLICAS
  value: "3"
- name: NOTIFICATIONS_LOG_LEVEL
  description: Log level for com.redhat.cloud.notifications
  value: INFO
- name: QUARKUS_HTTP_PORT
  description: Quarkus HTTP server port
  value: "8000"
- name: NOTIFICATIONS_RECIPIENTS_RESOLVER_MAX_RESULTS_PER_PAGE
  description: Limit value sent to the external users service while querying users.
  value: "1000"
- name: NOTIFICATIONS_RECIPIENTS_RESOLVER_FETCH_USERS_MBOP_ENABLED
  description: Users from an organization will be retrieved from MBOP if true
  value: "false"
- name: NOTIFICATIONS_RECIPIENTS_RESOLVER_FETCH_USERS_RBAC_ENABLED
  description: Users from an organization will be retrieved from RBAC if true
  value: "true"
- name: NOTIFICATIONS_UNLEASH_ENABLED
  value: "false"
- name: QUARKUS_LOG_CATEGORY__ORG_JBOSS_RESTEASY_REACTIVE_CLIENT_LOGGING__LEVEL
  description: When QUARKUS_REST_CLIENT_LOGGING_SCOPE is set to 'request-response', this logger level needs to be set to DEBUG
  value: INFO
- name: QUARKUS_LOG_CLOUDWATCH_API_CALL_TIMEOUT
  description: Amount of time to allow the CloudWatch client to complete the execution of an API call expressed with the ISO-8601 duration format PnDTnHnMn.nS.
  value: PT30S
- name: QUARKUS_LOG_CLOUDWATCH_BATCH_PERIOD
  description: Period between two batch executions. Defaults to 5s.
  value: 5s
- name: QUARKUS_LOG_CLOUDWATCH_BATCH_SIZE
  description: Number of log events sent to CloudWatch per batch. Defaults to 10,000 which is the maximum number of log events per batch allowed by CloudWatch.
  value: "10000"
- name: QUARKUS_LOG_CLOUDWATCH_MAX_QUEUE_SIZE
  description: Optional maximum size of the log events queue. If this is not set, the queue will have a capacity of Integer#MAX_VALUE.
  value: "100000"
- name: OIDC_CLIENT_ENABLED
  description: If true, the OIDC client will be enabled.
  value: "false"
- name: OIDC_ISSUER
  description: The issuer of the OIDC tokens.
  value: https://redhat.com/realms/redhat-external
- name: QUARKUS_REST_CLIENT_LOGGING_SCOPE
  description: When set to 'request-response', rest-client will log the request and response contents
  value: ""
- name: RBAC_GROUP_USERS_RETENTION_DELAY
  description: RBAC group users data cache retention delay. It must be expressed with the ISO-8601 duration format PnDTnHnMn.nS.
  value: PT10M
- name: RBAC_S2S_READ_TIMEOUT
  description: Delay in milliseconds before an RBAC S2S query is interrupted
  value: "120000"
- name: RBAC_SERVICE_TO_SERVICE_APP
  description: RBAC application name to use for service-to-service communication
  value: notifications
- name: RBAC_USERS_RETENTION_DELAY
  description: RBAC users data cache retention delay. It must be expressed with the ISO-8601 duration format PnDTnHnMn.nS.
  value: PT10M
- name: FIND_RECIPIENTS_EXPIRE_AFTER_WRITE
  value: PT10M
- name: IT_S2S_READ_TIMEOUT
  description: Delay in milliseconds before an IT S2S query is interrupted
  value: "90000"
- name: SENTRY_DSN
  description: The DSN to push data to Sentry — i.e. https://public_key@host/project_id?environment=
- name: SENTRY_ENABLED
  description: Enable Sentry (or not)
  value: "false"
- name: NOTIFICATIONS_RECIPIENTS_RESOLVER_WARN_IF_REQUEST_DURATION_EXCEEDS
  description: Log request if it exceed this limit
  value: PT30S
- name: BACKOFFICE_CLIENT_ENV
  description: Back-office client environment
  value: qa
- name: BACKOFFICE_HOST
  description: The host of the backoffice proxy
  value: backoffice-proxy.apps.ext.spoke.preprod.us-west-2.aws.paas.redhat.com
- name: BACKOFFICE_SCHEME
  description: The scheme for the backoffice proxy host's URL
  value: "https"
- name: NOTIFICATIONS_RECIPIENTS_RESOLVER_USE_KESSEL_ENABLED
  value: "false"
- name: NOTIFICATIONS_KESSEL_RELATIONS_SECURE_CLIENTS
  description: Should the inventory gRPC client open channels over TLS?
  value: "false"
- name: NOTIFICATIONS_KESSEL_OIDC_ISSUER
  description: Specifies the issuer of the OIDC authentication tokens.
  value: "https://redhat.com/realms/redhat-external"
- name: KESSEL_DOMAIN
  value: "redhat"
