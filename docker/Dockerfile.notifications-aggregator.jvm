####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
###

# Build the project
FROM registry.access.redhat.com/ubi8/openjdk-21:latest AS build
USER root
COPY . /home/jboss
WORKDIR /home/jboss
RUN ./mvnw clean package -DskipTests -pl :notifications-aggregator -am --no-transfer-progress

# Build the container
FROM registry.access.redhat.com/ubi8/openjdk-21-runtime:latest

# Update the base image packages
USER root
RUN microdnf update --refresh --nodocs && microdnf clean all
# Temporary workaround for packages affected by a CVE and not needed to run our app which is why we're removing them from the base image
RUN rpm -e --nodeps platform-python-setuptools
RUN rpm -e --nodeps platform-python-pip
USER jboss

ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'
ENV JAVA_OPTIONS="-Djava.util.logging.manager=org.jboss.logmanager.LogManager -XX:+ExitOnOutOfMemoryError"

# Konflux preflight check requires a license
COPY --from=build /home/jboss/LICENSE.txt /licenses/LICENSE

# Use four distinct layers so if there are application changes the library layers can be re-used
COPY --from=build --chown=185 /home/jboss/aggregator/target/quarkus-app/lib/ /deployments/lib/
COPY --from=build --chown=185 /home/jboss/aggregator/target/quarkus-app/*.jar /deployments/
COPY --from=build --chown=185 /home/jboss/aggregator/target/quarkus-app/app/ /deployments/app/
COPY --from=build --chown=185 /home/jboss/aggregator/target/quarkus-app/quarkus/ /deployments/quarkus/

EXPOSE 8080
USER 185

ENTRYPOINT ["sh", "-c", "java $JAVA_OPTIONS -jar /deployments/quarkus-run.jar"]
