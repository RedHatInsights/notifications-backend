# Kafka bootstrap applies to all topics
kafka.bootstrap.servers=localhost:9092

quarkus.http.port=8085

# Change port for tests to avoid messing with local Kafka instance
%test.quarkus.http.port=9085
%test.quarkus.http.test-port=9085

mp.messaging.incoming.aggregation.connector=smallrye-kafka
mp.messaging.incoming.aggregation.topic=platform.notifications.aggregation
mp.messaging.incoming.aggregation.group.id=integrations
mp.messaging.incoming.aggregation.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.aggregation.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Input queue
mp.messaging.incoming.ingress.connector=smallrye-kafka
mp.messaging.incoming.ingress.topic=platform.notifications.ingress
mp.messaging.incoming.ingress.group.id=integrations
mp.messaging.incoming.ingress.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.ingress.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Output queue to Camel (notifications-sender)
mp.messaging.outgoing.toCamel.connector=smallrye-kafka
mp.messaging.outgoing.toCamel.topic=notifs
mp.messaging.outgoing.toCamel.group.id=integrations
mp.messaging.outgoing.toCamel.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.toCamel.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.toCamel.enabled=false

# Input queue from camel sender
mp.messaging.incoming.fromCamel.connector=smallrye-kafka
mp.messaging.incoming.fromCamel.topic=notif-return
mp.messaging.incoming.fromCamel.group.id=integrations
mp.messaging.incoming.fromCamel.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.fromCamel.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.fromCamel.enabled=false

# configure your datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc=false
quarkus.datasource.reactive.url=postgresql://127.0.0.1:5432/notifications

quarkus.hibernate-orm.physical-naming-strategy=com.redhat.cloud.notifications.db.naming.SnakeCasePhysicalNamingStrategy
quarkus.hibernate-orm.metrics.enabled=true
quarkus.log.category."org.hibernate.engine.internal.StatisticalLoggingSessionEventListener".level=WARN

# Uncomment to log Hibernate SQL statements
#quarkus.hibernate-orm.log.sql=true

# Flyway minimal config properties
# Temporarily disabled, see com.redhat.cloud.notifications.db.FlywayWorkaround for more details.
#quarkus.flyway.migrate-at-start=true

# OpenAPI path
quarkus.smallrye-openapi.path=/openapi.json
mp.openapi.extensions.smallrye.operationIdStrategy=CLASS_METHOD

quarkus.http.access-log.enabled=true
quarkus.http.access-log.category=access_log
quarkus.http.access-log.pattern=combined
quarkus.log.category."com.redhat.cloud.notifications".level=INFO

%test.quarkus.http.access-log.category=info

rbac.enabled=true

# RBAC configuration used during user authentication. It is used when a public REST API is called.
#rbac-authentication/mp-rest/url=http://ci.foo.redhat.com:1337
rbac-authentication/mp-rest/url=https://ci.cloud.redhat.com
rbac-authentication/mp-rest/connectTimeout=2000
rbac-authentication/mp-rest/readTimeout=2000

# RBAC configuration used to retrieve email recipients. It is used when an email notification is sent.
#rbac-s2s/mp-rest/url=http://ci.foo.redhat.com:1337
rbac-s2s/mp-rest/url=https://ci.cloud.redhat.com
rbac-s2s/mp-rest/connectTimeout=2000
rbac-s2s/mp-rest/readTimeout=120000

# Duration rbac entries are kept in cache
quarkus.cache.caffeine.rbac-cache.expire-after-write=PT120s

# Used for service to service communication
rbac.service-to-service.application=notifications
recipient-provider.rbac.elements-per-page=40

# Quarkus since 1.11 redirects non-apps to /q/. We need to prevent this
quarkus.http.non-application-root-path=/

# Sentry logging. Off by default, enabled on OpenShift
# See https://quarkus.io/guides/logging-sentry#in-app-packages
quarkus.log.sentry=false
quarkus.log.sentry.in-app-packages=*
quarkus.log.sentry.dsn=FILL_ME

# BOP properties
processor.email.bop_url=https://backoffice-proxy-insights-services.ext.us-east.aws.preprod.paas.redhat.com
processor.email.bop_apitoken=addme
processor.email.bop_client_id=policies
processor.email.bop_env=qa
processor.email.no_reply=no-reply@redhat.com

# Policies-notification migration
policynotifications/mp-rest/url=http://localhost:8090
policynotifications/mp-rest/connectTimeout=2000
policynotifications/mp-rest/readTimeout=2000

# qute
quarkus.qute.property-not-found-strategy=throw-exception

quarkus.log.level=INFO
quarkus.log.cloudwatch.enabled=false
quarkus.log.cloudwatch.region=us-east-1
quarkus.log.cloudwatch.log-group=notificationsLogGroup
quarkus.log.cloudwatch.log-stream-name=notifications-backend
quarkus.log.cloudwatch.level=INFO
quarkus.log.cloudwatch.access-key-id=placeholder
quarkus.log.cloudwatch.access-key-secret=placeholder

# The current status is cached to limit the number of status DB queries
quarkus.cache.caffeine.maintenance.expire-after-write=PT60s
quarkus.cache.caffeine.rbac-recipient-users-provider-get-users.expire-after-write=PT10M
quarkus.cache.caffeine.rbac-recipient-users-provider-get-group-users.expire-after-write=PT10M

# Period between two event log cleanings. It must be expressed with the ISO-8601 duration format PnDTnHnMn.nS.
event-log-cleaner.period=PT10M
%test.event-log-cleaner.period=disabled

# Period between two Kafka message IDs cleanings. It must be expressed with the ISO-8601 duration format PnDTnHnMn.nS.
# Kafka doesn't like when a config key starts with "kafka", hence the "notifications." prefix.
notifications.kafka-messages-cleaner.period=PT10M
%test.notifications.kafka-messages-cleaner.period=disabled
