package drawer;

import com.redhat.cloud.notifications.ingress.Action;
import com.redhat.cloud.notifications.qute.templates.IntegrationType;
import com.redhat.cloud.notifications.qute.templates.TemplateDefinition;
import com.redhat.cloud.notifications.qute.templates.TemplateService;
import helpers.TestHelpers;
import io.quarkus.test.junit.QuarkusTest;
import jakarta.inject.Inject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

@QuarkusTest
class TestVulnerabilityTemplate {

    private static final Action ACTION = TestHelpers.createVulnerabilityAction();

    static final String NEW_CVE_HIGH_CVSS_EVENT = "new-cve-cvss";
    static final String NEW_CVE_CRIT_SEVERITY_EVENT = "new-cve-severity";
    static final String NEW_CVE_SECURITY_RULE_EVENT = "new-cve-security-rule";
    static final String ANY_CVE_KNOWN_EXPLOIT_EVENT = "any-cve-known-exploit";

    protected String getApp() {
        return "vulnerability";
    }

    @Inject
    TemplateService templateService;

    @Test
    void testRenderedTemplateNewCveHighCvss() {
        String result = renderTemplate(NEW_CVE_HIGH_CVSS_EVENT, ACTION);
        assertEquals("Red Hat Insights has just identified a CVE with a CVSS score of >= 7. Please review the details of this CVE and affected systems to determine risk and exposure for your organization.", result);
    }

    @Test
    void testRenderedTemplateNewCveCritSeverity() {
        String result = renderTemplate(NEW_CVE_CRIT_SEVERITY_EVENT, ACTION);
        assertEquals("Red Hat Insights has just identified a CVE with a severity of Critical. Please review the details of this CVE and affected systems to determine risk and exposure for your organization.", result);
    }

    @Test
    void testRenderedTemplateNewCveSecurityRule() {
        String result = renderTemplate(NEW_CVE_SECURITY_RULE_EVENT, ACTION);
        assertEquals("Red Hat Insights has just identified a newly published CVE with the Security rule label. Please review the details of this CVE and affected systems to determine risk and exposure for your organization. Red Hat recommends treating this issue with high priority to protect your organization.", result);
    }

    @Test
    void testRenderedTemplateAnyKnownExploit() {
        String result = renderTemplate(ANY_CVE_KNOWN_EXPLOIT_EVENT, ACTION);
        assertEquals("Red Hat Insights has just identified a CVE with the Known Exploit label. Please review the details of this **CVE-TEST**. The \"Known Exploit\" flag is added to any CVE that is determined to have been exploited in the \"wild\" by Red Hat Product Security. This flag does not reflect your environment.", result);
    }

    String renderTemplate(final String eventType, final Action action) {
        TemplateDefinition templateConfig = new TemplateDefinition(IntegrationType.DRAWER, "rhel", "vulnerability", eventType);
        return templateService.renderTemplate(templateConfig, action);
    }
}
