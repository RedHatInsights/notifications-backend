package com.redhat.cloud.notifications.templates;

import com.redhat.cloud.notifications.models.EmailSubscriptionType;
import io.quarkus.qute.CheckedTemplate;
import io.quarkus.qute.TemplateInstance;

public class MalwareDetection implements EmailTemplate {

    @Override
    public TemplateInstance getTitle(String eventType, EmailSubscriptionType type) {
        if (type == EmailSubscriptionType.INSTANT) {
            if (eventType.equals("detected-malware")) {
                return Templates.detectedMalwareInstantEmailTitle();
            }
        }

        throw new UnsupportedOperationException(String.format(
                "No email title template for Malware Detection event_type: %s and EmailSubscription: %s found.",
                eventType, type
        ));
    }

    @Override
    public TemplateInstance getBody(String eventType, EmailSubscriptionType type) {
        if (type == EmailSubscriptionType.INSTANT) {
            if (eventType.equals("detected-malware")) {
                return Templates.detectedMalwareInstantEmailBody();
            }
        }

        throw new UnsupportedOperationException(String.format(
            "No email body template for Malware Detection event_type: %s and EmailSubscription: %s found.",
            eventType, type
        ));
    }

    @Override
    public boolean isSupported(String eventType, EmailSubscriptionType type) {
        return eventType.equals("detected-malware") && type == EmailSubscriptionType.INSTANT;
    }

    @Override
    public boolean isEmailSubscriptionSupported(EmailSubscriptionType type) {
        return type == EmailSubscriptionType.INSTANT;
    }

    @CheckedTemplate(requireTypeSafeExpressions = false)
    public static class Templates {

        public static native TemplateInstance detectedMalwareInstantEmailTitle();

        public static native TemplateInstance detectedMalwareInstantEmailBody();
    }
}
