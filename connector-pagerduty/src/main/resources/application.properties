notifications.connector.http.components=https
notifications.connector.kafka.incoming.group-id=notifications-connector-pagerduty
notifications.connector.kafka.incoming.topic=${mp.messaging.tocamel.topic}
notifications.connector.kafka.outgoing.topic=${mp.messaging.fromcamel.topic}
notifications.connector.name=pagerduty
notifications.connector.redelivery.counter-name=camel.pagerduty.retry.counter
# The following value matches the default value of the `connectionsPerRoute` option from the Camel `http` component.
notifications.connector.seda.concurrent-consumers=20
# The following value matches the default value of the `connectionsPerRoute` option from the Camel `http` component.
notifications.connector.seda.queue-size=20
notifications.connector.supported-connector-headers=${notifications.connector.name}

quarkus.http.port=9009

quarkus.log.cloudwatch.enabled=false
quarkus.log.cloudwatch.level=INFO
quarkus.log.cloudwatch.log-stream-name=${HOST_NAME:notifications-connector-pagerduty}

quarkus.log.sentry.enabled=false
quarkus.log.sentry.in-app-packages=com.redhat.cloud.notifications

quarkus.kafka.devservices.port=9092

camel.component.kafka.brokers=localhost:9092
camel.component.kafka.sasl-jaas-config=""
camel.component.kafka.sasl-mechanism=GSSAPI
camel.component.kafka.security-protocol=PLAINTEXT
camel.component.kafka.ssl-truststore-location=
camel.component.kafka.ssl-truststore-type=JKS
camel.component.kafka.retries=3
camel.component.kafka.retry-backoff-ms=200

camel.context.name=notifications-connector-pagerduty

mp.messaging.tocamel.topic=platform.notifications.tocamel
mp.messaging.fromcamel.topic=platform.notifications.fromcamel

# Kafka messaging configuration
mp.messaging.incoming.incoming-notifications.connector=smallrye-kafka
mp.messaging.incoming.incoming-notifications.topic=${CONNECTOR_INCOMING_TOPIC:platform.notifications.tocamel}
mp.messaging.incoming.incoming-notifications.group.id=${CONNECTOR_GROUP_ID:integrations}
mp.messaging.incoming.incoming-notifications.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.incoming-notifications.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.incoming-notifications.cloud-events=true
mp.messaging.incoming.incoming-notifications.auto.offset.reset=earliest
mp.messaging.incoming.incoming-notifications.enable.auto.commit=true

# Outgoing Kafka configuration
mp.messaging.outgoing.outgoing-notifications.connector=smallrye-kafka
mp.messaging.outgoing.outgoing-notifications.topic=${CONNECTOR_OUTGOING_TOPIC:platform.notifications.fromcamel}
mp.messaging.outgoing.outgoing-notifications.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.outgoing-notifications.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.outgoing-notifications.cloud-events=true

%test.quarkus.log.category."com.redhat.cloud.notifications".level=DEBUG

quarkus.rest-client.sources.read-timeout=2000
quarkus.rest-client.sources.url=${clowder.endpoints.sources-api-svc.url:http://localhost:8000}
quarkus.rest-client.sources.trust-store=${clowder.endpoints.sources-api-svc.trust-store-path}
quarkus.rest-client.sources.trust-store-password=${clowder.endpoints.sources-api-svc.trust-store-password}
quarkus.rest-client.sources.trust-store-type=${clowder.endpoints.sources-api-svc.trust-store-type}

quarkus.rest-client.sources-oidc.read-timeout=2000
quarkus.rest-client.sources-oidc.url=${clowder.endpoints.sources-api-svc.url:http://localhost:8000}
quarkus.rest-client.sources-oidc.trust-store=${clowder.endpoints.sources-api-svc.trust-store-path}
quarkus.rest-client.sources-oidc.trust-store-password=${clowder.endpoints.sources-api-svc.trust-store-password}
quarkus.rest-client.sources-oidc.trust-store-type=${clowder.endpoints.sources-api-svc.trust-store-type}

# OIDC client configuration
quarkus.oidc-client.auth-server-url=REPLACE_ME_FROM_ENV_VAR
quarkus.oidc-client.client-id=REPLACE_ME_FROM_ENV_VAR
quarkus.oidc-client.credentials.secret=REPLACE_ME_FROM_ENV_VAR
quarkus.oidc-client.grant.type=client

quarkus.unleash.active=false
quarkus.unleash.url=http://localhost:4242

